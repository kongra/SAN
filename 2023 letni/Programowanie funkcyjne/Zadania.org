* Wszystkie zadania wykonujemy w językach (do wyboru):
- Clojure
- ClojureScript
- Common Lisp
- Scheme (Racket)
- Haskell
- Ocaml
- F#
- Erlang
- Java, C#, TypeScript

* Zadanie 1. https://projecteuler.net/problem=6

* Zadanie 2.
a. Wzór na pierwiastek sześcienny - zaimplementować
b. Przebieg procedury Herona uzależnić od Epsilon
c. Przebieg procedury Herona uzależnić od N (ilości kroków)

* Zadanie 3. Dany jest ciąg Fibonacciego
(defn fib [n]
  (if (< n 2)
    n
    (+ (fib (- n 1)) (fib (- n 2)))))

a. Wyznaczyć dokładny wzór opisujący ilość kroków niezbędnych do obliczenia (fib n)
b. Zaproponować procedurę rekurencyjną fib, która generuje proces iteracyjny
c. Zastosować formę (recur ...) i policzyć Fib(10000)

* Zadanie 4. Zbiór potęgowy (ang. powerset)
   Napisać procedurę, która przyjmuje kolekcję elementów (lista, wektor, zbiór) i
   generuje zbiór potęgowy dla tej kolekcji. Zbiór potęgowy to zbiór wszystkich
   podzbiorów danego zbioru łącznie ze zbiorem pustym.

   (powerset [1 2 3]) => ([] [1] [2] [3] [1 2] [1 3] [2 3] [1 2 3])
   
Zadanie 5.
a. Zrealizuj pierwiastek sześcienny z wykorzystaniem average-damp oraz FIXED-POINT
b. Zrealizuj pierwiastek sześcienny z wykorzystaniem Newtons-method
c. Niech f i g będą dwoma funkcjami jednoargumentowymi. Złożenie f z g
jest określone jako funkcja x -> f(g(x)). Zdefiniuj procedurę złóż
implementującą złożenie funkcji. Przykładowo:
((złóż kwadrat inc) 6) => 49
d. Jeśli f jest funkcją jednoargumentową określoną na liczbach oraz n
jest dowolną liczbą naturalną, to n-krotnym złożeniem funkcji f
nazywamy funkcję, której wartością jest wynik n-krotnego zastosowania
funkcji f:
x -> f(f( ... (f(x)) ...))
Napisz procedurę realizującą n-krotne złożenie funkcji f wykorzystując
rozwiązanie z punktu c.
